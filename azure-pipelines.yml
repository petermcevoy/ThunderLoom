# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:

# Get thunderloom dependencies
- task: DownloadPackage@1
  inputs:
    packageType: 'upack'
    feed: '/5f5d377c-f4e8-4587-acd2-348e71a79799'
    view: 
    definition: 'f25dc537-a23e-474d-98f3-fa5af32ce539'
    version: '0.0.1'
    downloadPath: 'frontends/dependencies/'
# Get max/vray/wix sdks
- task: DownloadPackage@1
  inputs:
    packageType: 'upack'
    feed: '/5f5d377c-f4e8-4587-acd2-348e71a79799'
    view: '0781f2df-dcd1-4e1a-82ff-81f1fa300634'
    definition: '745061d4-9a90-44d7-9210-85d768f5e981'
    version: '0.0.3'
    downloadPath: '$(System.DefaultWorkingDirectory)/thunderloom_sdks'

- task: CMake@1
  inputs:
    workingDirectory: 'frontends'
    cmakeArgs: >-
      -G "Visual Studio 16 2019"
      -A x64
      --config RelWithDebInfo
      -B build
      -DBUILD_VRAYSTANDALONE=1
      -DVRAY_STANDALONE_ROOT=$(System.DefaultWorkingDirectory)/thunderloom_sdks/vray/vraystd_adv_43002_x64_vc14
      -DBUILD_3DSMAX=1
      -D3DSMAX_VERSIONS=2019
      -D3DSMAXSDK2019_ROOT="$(System.DefaultWorkingDirectory)/thunderloom_sdks/max/3ds Max 2019 SDK/maxsdk"
      -DVRAY_3DSMAX2019_ROOT="$(System.DefaultWorkingDirectory)/thunderloom_sdks/vray/vray_adv_43001_max2019_x64/3ds Max 2019"
      -DWIX_BIN_PATH="$(System.DefaultWorkingDirectory)/thunderloom_sdks/wix_bin/WiX Toolset v3.11/bin"
      .
- task: CMake@1
  inputs:
    workingDirectory: 'frontends'
    cmakeArgs: '--build .\build --config RelWithDebInfo --target install'
- task: CmdLine@2
  inputs:
    script: '.\make_installer.bat'
    workingDirectory: 'frontends/out/install/Windows/thunderloom_installer'
    failOnStderr: true

- script: python -m pip install --upgrade pip setuptools wheel
  displayName: 'Install srcserv pythonmodule'
- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import os
      import srcsrv
      srcsrv.main(['--build-base', r'c:\builds\ver1.1.0',
             '--pdbs', 'debug', 'release',
             '--hexsha', os.environ['GIT_SHA'],
             ...])
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'frontends/out/install'
    ArtifactName: 'install'
    publishLocation: 'Container'
